/*
 * motor_driver.h
 *
 *  Created on: Apr 18, 2024
 *      Author: julia
 */

#ifndef INC_MOTOR_DRIVER_H_
#define INC_MOTOR_DRIVER_H_

#include <stdio.h>
#include <stdint.h>

/*To implement your driver you will need to create a new datatype using a C struct and the typedef keyword.
 *  The structure should have fields representing the information pertinent to a specific motor driver channel
 *  - perhaps with information like:
The handle to the HAL timer object used for PWM generation.
The pins and ports associated with the pins used by the driver.
What channels on the timer are associated with the PWM pins.
Any other information needed inside the three functions mentioned above.*/

// Motor object data structure
struct {
	//
    int32_t  duty;
    uint32_t channel;

    //The handle to the HAL timer object used for PWM generation.
    TIM_HandleTypeDef* hal_tim;

} typedef motor_t;

/*Your driver should, at the minimum, have the following functionality:
A function to enable one of the motor driver channels
A function to disable one of the motor driver channels
A function to set the duty cycle of one of the motor driver channels*/

// Prototype for motor object "method"

void start_PWM(motor_t* p_mot, uint32_t channel);

void stop_PWM(motor_t* p_mot, uint32_t channel);

void set_duty(motor_t* p_mot, int32_t duty);

#endif /* INC_MOTOR_DRIVER_H_ */
