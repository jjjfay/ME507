/*
 * motor_driver.c
 *
 *  Created on: Apr 18, 2024
 *      Author: julia
 */

#include "motor_driver.h"


void start_PWM(motor_t* p_mot, uint32_t channel)
{

	HAL_TIM_PWM_Start(hal_tim, channel1);
	HAL_TIM_PWM_Start(hal_tim, channel2);

}

void stop_PWM(motor_t* p_mot, uint32_t channel)
{





}

void set_duty(motor_t* p_mot, int32_t duty)
{
    // Print to the console so we can see what's happening
    printf("Setting Motor Duty Cycle to %d", duty);

    // Assign the duty cycle to a field in the structure
    p_mot->duty = duty;

    // The arrow operator is shorthand for
    // dereferencing and accessing struct fields
    // p_mot->duty = duty;
    // is shorthand for
    // (*p_mot).duty = duty;

    if (duty >= 0) {

    	__HAL_TIM_SET_COMPARE(hal_tim, channel1,duty);
    	__HAL_TIM_SET_COMPARE(hal_tim, channel2,0);

      } else {

    	__HAL_TIM_SET_COMPARE(hal_tim, channel1,0);
    	__HAL_TIM_SET_COMPARE(hal_tim, channel2,-1*duty);
      }


}

